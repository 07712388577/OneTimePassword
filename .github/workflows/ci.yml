name: CI

on: [push]

jobs:
  xcode-ios:
    name: "Xcode ${{ matrix.env.xcode }}, ${{ matrix.env.runtime }}, ${{ matrix.env.device }}"
    runs-on: macOS-10.15
    strategy:
      matrix:
        env:
          - xcode: 12.4
            runtime: "iOS 14.4"
            device: "iPhone 12 Pro Max"
          - xcode: 12.4
            runtime: "iOS 13.7"
            device: "iPhone 11"
          - xcode: 12.4
            runtime: "iOS 12.4"
            device: "iPhone 5s"
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Link simulator runtimes
      run: |
        sudo mkdir -p /Library/Developer/CoreSimulator/Profiles/Runtimes
        sudo ln -s /Applications/Xcode_10.3.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/Library/CoreSimulator/Profiles/Runtimes/iOS.simruntime /Library/Developer/CoreSimulator/Profiles/Runtimes/iOS\ 12.4.simruntime
        sudo ln -s /Applications/Xcode_11.7.app/Contents/Developer/Platforms/iPhoneOS.platform/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS.simruntime /Library/Developer/CoreSimulator/Profiles/Runtimes/iOS\ 13.7.simruntime
    - name: "Select Xcode ${{ matrix.env.xcode }}"
      uses: ./.github/actions/xcode-select
      with: 
        version: ${{ matrix.env.xcode }}
    - name: "Build and Test"
      run: |
        RUNTIME="${{ matrix.env.runtime }}"
        DEVICE="${{ matrix.env.device }}"
        DEVICE_ID=com.apple.CoreSimulator.SimDeviceType.$(echo $DEVICE | sed -E -e "s/[ \-]+/ /g" -e "s/[^[:alnum:]]/-/g")
        RUNTIME_ID=com.apple.CoreSimulator.SimRuntime.$(echo $RUNTIME | sed -E -e "s/[ \-]+/ /g" -e "s/[^[:alnum:]]/-/g")
        DESTINATION_ID=$(xcrun simctl create "Custom: $DEVICE, $RUNTIME" $DEVICE_ID $RUNTIME_ID)
        xcrun simctl boot $DESTINATION_ID
        set -o pipefail
        xcodebuild test -workspace "OneTimePassword.xcworkspace" -scheme "OneTimePassword (iOS)" -destination "id=$DESTINATION_ID" | xcpretty -c
    - uses: codecov/codecov-action@v1

  xcode-watchos:
    name: "Xcode ${{ matrix.env.xcode }}, ${{ matrix.env.runtime }}, ${{ matrix.env.device }}"
    runs-on: macOS-10.15
    strategy:
      matrix:
        env:
          - xcode: 12.4
            runtime: "watchOS 7.2"
            device: "Apple Watch Series 6 - 44mm"
          - xcode: 12.4
            runtime: "watchOS 6.2"
            device: "Apple Watch Series 4 - 40mm"
          - xcode: 12.4
            runtime: "watchOS 5.3"
            device: "Apple Watch Series 2 - 38mm"
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Link simulator runtimes
      run: |
        sudo mkdir -p /Library/Developer/CoreSimulator/Profiles/Runtimes
        sudo ln -s /Applications/Xcode_10.3.app/Contents/Developer/Platforms/WatchOS.platform/Developer/Library/CoreSimulator/Profiles/Runtimes/watchOS.simruntime /Library/Developer/CoreSimulator/Profiles/Runtimes/watchOS\ 5.2.simruntime
        sudo ln -s /Applications/Xcode_11.7.app/Contents/Developer/Platforms/WatchOS.platform/Library/Developer/CoreSimulator/Profiles/Runtimes/watchOS.simruntime /Library/Developer/CoreSimulator/Profiles/Runtimes/watchOS\ 6.2.simruntime
    - name: "Select Xcode ${{ matrix.env.xcode }}"
      uses: ./.github/actions/xcode-select
      with: 
        version: ${{ matrix.env.xcode }}
    - name: "Build"
      run: |
        RUNTIME="${{ matrix.env.runtime }}"
        DEVICE="${{ matrix.env.device }}"
        DEVICE_ID=com.apple.CoreSimulator.SimDeviceType.$(echo $DEVICE | sed -E -e "s/[ \-]+/ /g" -e "s/[^[:alnum:]]/-/g")
        RUNTIME_ID=com.apple.CoreSimulator.SimRuntime.$(echo $RUNTIME | sed -E -e "s/[ \-]+/ /g" -e "s/[^[:alnum:]]/-/g")
        DESTINATION_ID=$(xcrun simctl create "Custom: $DEVICE, $RUNTIME" $DEVICE_ID $RUNTIME_ID)
        set -o pipefail
        xcodebuild build -workspace "OneTimePassword.xcworkspace" -scheme "OneTimePassword (watchOS)" -destination "id=$DESTINATION_ID" | xcpretty -c

  carthage:
    name: "Carthage, Xcode ${{ matrix.env.xcode }}"
    runs-on: macOS-10.15
    strategy:
      matrix:
        env:
          - xcode: 12.4
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: "Upgrade Carthage"
      run: brew upgrade carthage
    - name: "Select Xcode ${{ matrix.env.xcode }}"
      uses: ./.github/actions/xcode-select
      with: 
        version: ${{ matrix.env.xcode }}
    - name: "Build"
      run: carthage build --no-skip-current --use-xcframeworks --no-use-binaries

  cocoapods:
    name: "CocoaPods, Xcode ${{ matrix.env.xcode }}"
    runs-on: macOS-10.15
    strategy:
      matrix:
        env:
          - xcode: 12.4
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: "Upgrade CocoaPods"
      run: sudo gem install cocoapods
    - name: "Select Xcode ${{ matrix.env.xcode }}"
      uses: ./.github/actions/xcode-select
      with: 
        version: ${{ matrix.env.xcode }}
    - run: pod lib lint --allow-warnings --verbose

  spm:
    name: "SPM, Xcode ${{ matrix.env.xcode }}"
    runs-on: macOS-10.15
    strategy:
      matrix:
        env:
          - xcode: 12.4
    steps:
    - uses: actions/checkout@v2
    - name: "Select Xcode ${{ matrix.env.xcode }}"
      uses: ./.github/actions/xcode-select
      with: 
        version: ${{ matrix.env.xcode }}
    - run: swift test
